name: Deploy Storefront

on:
  push:
    branches:
      - main # Or your primary deployment branch for storefront
    paths: # Only run if files in these paths change
      - '212storefront/**' # Adjust if it's in a monorepo, e.g., 'apps/storefront/**'
      - '.github/workflows/main.yaml'
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # This checks out the repo where the workflow file resides

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify the Node.js version your project uses

      - name: Install dependencies
        run: npm install # Installs dependencies on the GitHub Actions runner

      - name: Build storefront
        run: npm run build # Builds the application on the GitHub Actions runner

      - name: Transfer built files to EC2
        uses: appleboy/scp-action@v1.0.1 # Use SCP action to copy files
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ".next/,public/,package.json,yarn.lock" # Specify files/directories to copy. Adjust lock file (yarn.lock/package-lock.json) as needed.
          target: "/var/www/212manager-app/212storefront" # Destination directory on EC2
          strip_components: 1 # Remove the leading directory component if copying from a subdirectory

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3 # Or latest version
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          # The script now only handles server-side commands after files are copied
          script: |
            set -e # Exit on error
            echo "Deploying storefront to /var/www/212manager-app/212storefront..."
            cd /var/www/212manager-app/212storefront
            
            # Files are already copied by the SCP action
            echo "Files transferred to $(pwd)"
            
            echo "Creating .env file from secret..."
            echo "${{ secrets.STOREFRONT_ENV }}" > .env
            
            echo "Restarting PM2 process for 212storefront..."
            pm2 restart 212storefront
            pm2 save
            echo "Storefront deployment complete."
            pm2 list
